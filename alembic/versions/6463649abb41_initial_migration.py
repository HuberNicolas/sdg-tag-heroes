"""Initial migration

Revision ID: 6463649abb41
Revises: 
Create Date: 2024-11-28 08:52:40.629517

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '6463649abb41'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('achievements',
    sa.Column('achievement_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('achievement_id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_achievements_achievement_id'), 'achievements', ['achievement_id'], unique=False)
    op.create_table('authors',
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('lastname', sa.String(length=255), nullable=False),
    sa.Column('surname', sa.String(length=255), nullable=False),
    sa.Column('orcid_id', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('author_id')
    )
    op.create_table('cluster_groups',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('divisions',
    sa.Column('division_id', sa.Integer(), nullable=False),
    sa.Column('division_setSpec', sa.String(length=255), nullable=False),
    sa.Column('division_name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('division_id'),
    sa.UniqueConstraint('division_setSpec')
    )
    op.create_table('faculties',
    sa.Column('faculty_id', sa.Integer(), nullable=False),
    sa.Column('faculty_setSpec', sa.String(length=255), nullable=False),
    sa.Column('faculty_name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('faculty_id'),
    sa.UniqueConstraint('faculty_setSpec')
    )
    op.create_table('groups',
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('group_id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_groups_group_id'), 'groups', ['group_id'], unique=False)
    op.create_table('institutes',
    sa.Column('institute_id', sa.Integer(), nullable=False),
    sa.Column('institute_setSpec', sa.String(length=255), nullable=False),
    sa.Column('institute_name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('institute_id'),
    sa.UniqueConstraint('institute_setSpec')
    )
    op.create_table('sdg_goals',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('index', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('color', sa.String(length=7), nullable=False),
    sa.Column('icon', mysql.LONGTEXT(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('index')
    )
    op.create_table('sdg_label_histories',
    sa.Column('history_id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('history_id')
    )
    op.create_index(op.f('ix_sdg_label_histories_history_id'), 'sdg_label_histories', ['history_id'], unique=False)
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('roles', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=False)
    op.create_table('admins',
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('admin_id')
    )
    op.create_table('cluster_levels',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('cluster_group_id', sa.Integer(), nullable=False),
    sa.Column('level_number', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['cluster_group_id'], ['cluster_groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('experts',
    sa.Column('expert_id', sa.Integer(), nullable=False),
    sa.Column('expert_score', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['expert_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('expert_id')
    )
    op.create_table('inventories',
    sa.Column('inventory_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('inventory_id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_inventories_inventory_id'), 'inventories', ['inventory_id'], unique=False)
    op.create_table('labelers',
    sa.Column('labeler_id', sa.Integer(), nullable=False),
    sa.Column('labeler_score', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['labeler_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('labeler_id')
    )
    op.create_table('publications',
    sa.Column('publication_id', sa.Integer(), nullable=False),
    sa.Column('oai_identifier', sa.String(length=255), nullable=False),
    sa.Column('oai_identifier_num', sa.Integer(), nullable=False),
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('publisher', sa.String(length=255), nullable=True),
    sa.Column('date', sa.String(length=100), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('source', sa.Text(), nullable=True),
    sa.Column('language', sa.String(length=255), nullable=True),
    sa.Column('format', sa.String(length=200), nullable=True),
    sa.Column('embedded', sa.Boolean(), nullable=False),
    sa.Column('set_spec', sa.Text(), nullable=True),
    sa.Column('is_dim_reduced', sa.Boolean(), nullable=False),
    sa.Column('faculty_id', sa.Integer(), nullable=True),
    sa.Column('institute_id', sa.Integer(), nullable=True),
    sa.Column('division_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['division_id'], ['divisions.division_id'], ),
    sa.ForeignKeyConstraint(['faculty_id'], ['faculties.faculty_id'], ),
    sa.ForeignKeyConstraint(['institute_id'], ['institutes.institute_id'], ),
    sa.PrimaryKeyConstraint('publication_id'),
    sa.UniqueConstraint('oai_identifier'),
    sa.UniqueConstraint('oai_identifier_num')
    )
    op.create_table('sdg_label_decisions',
    sa.Column('decision_id', sa.Integer(), nullable=False),
    sa.Column('suggested_label', sa.Integer(), nullable=False),
    sa.Column('decided_label', sa.Integer(), nullable=False),
    sa.Column('decision_type', sa.Enum('CONSENSUS_MAJORITY', 'CONSENSUS_TECHNOCRATIC', 'EXPERT_DECISION', name='decisiontype'), nullable=False),
    sa.Column('expert_id', sa.Integer(), nullable=True),
    sa.Column('history_id', sa.Integer(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('decided_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['expert_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['history_id'], ['sdg_label_histories.history_id'], ),
    sa.PrimaryKeyConstraint('decision_id')
    )
    op.create_index(op.f('ix_sdg_label_decisions_decision_id'), 'sdg_label_decisions', ['decision_id'], unique=False)
    op.create_table('sdg_targets',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('index', sa.String(length=10), nullable=False),
    sa.Column('text', sa.String(length=255), nullable=False),
    sa.Column('color', sa.String(length=7), nullable=False),
    sa.Column('target_vector_index', sa.Integer(), nullable=False),
    sa.Column('icon', mysql.LONGTEXT(), nullable=True),
    sa.Column('sdg_goal_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['sdg_goal_id'], ['sdg_goals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sdg_user_labels',
    sa.Column('label_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('proposed_label', sa.Integer(), nullable=True),
    sa.Column('voted_label', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('labeled_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.CheckConstraint('proposed_label >= 0 AND proposed_label <= 17', name='check_proposed_label_range'),
    sa.CheckConstraint('voted_label >= 0 AND voted_label <= 17', name='check_voted_label_range'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('label_id')
    )
    op.create_index(op.f('ix_sdg_user_labels_label_id'), 'sdg_user_labels', ['label_id'], unique=False)
    op.create_table('user_group_association',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.group_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'group_id')
    )
    op.create_table('annotations',
    sa.Column('annotation_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('sdg_user_label_id', sa.Integer(), nullable=False),
    sa.Column('labeler_score', sa.Float(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['sdg_user_label_id'], ['sdg_user_labels.label_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('annotation_id')
    )
    op.create_index(op.f('ix_annotations_annotation_id'), 'annotations', ['annotation_id'], unique=False)
    op.create_table('cluster_topics',
    sa.Column('topic_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('level_id', sa.Integer(), nullable=False),
    sa.Column('cluster_id_str', sa.String(length=255), nullable=False),
    sa.Column('size', sa.Float(), nullable=False),
    sa.Column('center_x', sa.Float(), nullable=False),
    sa.Column('center_y', sa.Float(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('topic_name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['level_id'], ['cluster_levels.id'], ),
    sa.PrimaryKeyConstraint('topic_id')
    )
    op.create_table('dimensionality_reductions',
    sa.Column('dim_red_id', sa.Integer(), nullable=False),
    sa.Column('publication_id', sa.Integer(), nullable=False),
    sa.Column('reduction_technique', sa.String(length=255), nullable=True),
    sa.Column('reduction_details', sa.Text(), nullable=True),
    sa.Column('reduction_shorthand', sa.String(length=255), nullable=True),
    sa.Column('x_coord', sa.Float(precision=4), nullable=True),
    sa.Column('y_coord', sa.Float(precision=4), nullable=True),
    sa.Column('z_coord', sa.Float(precision=4), nullable=True),
    sa.Column('sdg', sa.Integer(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['publication_id'], ['publications.publication_id'], ),
    sa.PrimaryKeyConstraint('dim_red_id')
    )
    op.create_table('inventory_achievement_association',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inventory_id', sa.Integer(), nullable=False),
    sa.Column('achievement_id', sa.Integer(), nullable=False),
    sa.Column('comment', sa.String(length=255), nullable=True),
    sa.Column('added_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['achievement_id'], ['achievements.achievement_id'], ),
    sa.ForeignKeyConstraint(['inventory_id'], ['inventories.inventory_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_inventory_achievement_association_id'), 'inventory_achievement_association', ['id'], unique=False)
    op.create_table('publication_authors',
    sa.Column('publication_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['authors.author_id'], ),
    sa.ForeignKeyConstraint(['publication_id'], ['publications.publication_id'], ),
    sa.PrimaryKeyConstraint('publication_id', 'author_id')
    )
    op.create_table('sdg_label_decision_user_label',
    sa.Column('decision_id', sa.Integer(), nullable=False),
    sa.Column('user_label_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['decision_id'], ['sdg_label_decisions.decision_id'], ),
    sa.ForeignKeyConstraint(['user_label_id'], ['sdg_user_labels.label_id'], ),
    sa.PrimaryKeyConstraint('decision_id', 'user_label_id')
    )
    op.create_table('sdg_label_summaries',
    sa.Column('sdg_label_summary_id', sa.Integer(), nullable=False),
    sa.Column('publication_id', sa.Integer(), nullable=False),
    sa.Column('history_id', sa.Integer(), nullable=False),
    sa.Column('sdg1', sa.Integer(), nullable=False),
    sa.Column('sdg2', sa.Integer(), nullable=False),
    sa.Column('sdg3', sa.Integer(), nullable=False),
    sa.Column('sdg4', sa.Integer(), nullable=False),
    sa.Column('sdg5', sa.Integer(), nullable=False),
    sa.Column('sdg6', sa.Integer(), nullable=False),
    sa.Column('sdg7', sa.Integer(), nullable=False),
    sa.Column('sdg8', sa.Integer(), nullable=False),
    sa.Column('sdg9', sa.Integer(), nullable=False),
    sa.Column('sdg10', sa.Integer(), nullable=False),
    sa.Column('sdg11', sa.Integer(), nullable=False),
    sa.Column('sdg12', sa.Integer(), nullable=False),
    sa.Column('sdg13', sa.Integer(), nullable=False),
    sa.Column('sdg14', sa.Integer(), nullable=False),
    sa.Column('sdg15', sa.Integer(), nullable=False),
    sa.Column('sdg16', sa.Integer(), nullable=False),
    sa.Column('sdg17', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['history_id'], ['sdg_label_histories.history_id'], ),
    sa.ForeignKeyConstraint(['publication_id'], ['publications.publication_id'], ),
    sa.PrimaryKeyConstraint('sdg_label_summary_id'),
    sa.UniqueConstraint('history_id'),
    sa.UniqueConstraint('publication_id')
    )
    op.create_index(op.f('ix_sdg_label_summaries_sdg_label_summary_id'), 'sdg_label_summaries', ['sdg_label_summary_id'], unique=False)
    op.create_table('sdg_predictions',
    sa.Column('prediction_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('publication_id', sa.Integer(), nullable=False),
    sa.Column('prediction_model', sa.String(length=255), nullable=False),
    sa.Column('sdg1', sa.Float(precision=4), nullable=False),
    sa.Column('sdg2', sa.Float(precision=4), nullable=False),
    sa.Column('sdg3', sa.Float(precision=4), nullable=False),
    sa.Column('sdg4', sa.Float(precision=4), nullable=False),
    sa.Column('sdg5', sa.Float(precision=4), nullable=False),
    sa.Column('sdg6', sa.Float(precision=4), nullable=False),
    sa.Column('sdg7', sa.Float(precision=4), nullable=False),
    sa.Column('sdg8', sa.Float(precision=4), nullable=False),
    sa.Column('sdg9', sa.Float(precision=4), nullable=False),
    sa.Column('sdg10', sa.Float(precision=4), nullable=False),
    sa.Column('sdg11', sa.Float(precision=4), nullable=False),
    sa.Column('sdg12', sa.Float(precision=4), nullable=False),
    sa.Column('sdg13', sa.Float(precision=4), nullable=False),
    sa.Column('sdg14', sa.Float(precision=4), nullable=False),
    sa.Column('sdg15', sa.Float(precision=4), nullable=False),
    sa.Column('sdg16', sa.Float(precision=4), nullable=False),
    sa.Column('sdg17', sa.Float(precision=4), nullable=False),
    sa.Column('predicted', sa.Boolean(), nullable=False),
    sa.Column('last_predicted_goal', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['publication_id'], ['publications.publication_id'], ),
    sa.PrimaryKeyConstraint('prediction_id')
    )
    op.create_table('publication_clusters',
    sa.Column('publication_cluster_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('publication_id', sa.Integer(), nullable=False),
    sa.Column('cluster_id', sa.Integer(), nullable=False),
    sa.Column('cluster_id_string', sa.String(length=255), nullable=False),
    sa.Column('sdg', sa.Integer(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('topic', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['cluster_id'], ['cluster_topics.topic_id'], ),
    sa.ForeignKeyConstraint(['publication_id'], ['publications.publication_id'], ),
    sa.PrimaryKeyConstraint('publication_cluster_id')
    )
    op.create_table('votes',
    sa.Column('vote_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('sdg_user_label_id', sa.Integer(), nullable=True),
    sa.Column('annotation_id', sa.Integer(), nullable=True),
    sa.Column('vote_type', sa.Enum('POSITIVE', 'NEUTRAL', 'NEGATIVE', name='votetype'), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.CheckConstraint('(sdg_user_label_id IS NOT NULL AND annotation_id IS NULL) OR (sdg_user_label_id IS NULL AND annotation_id IS NOT NULL)', name='check_one_target_not_both'),
    sa.ForeignKeyConstraint(['annotation_id'], ['annotations.annotation_id'], ),
    sa.ForeignKeyConstraint(['sdg_user_label_id'], ['sdg_user_labels.label_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('vote_id')
    )
    op.create_index(op.f('ix_votes_vote_id'), 'votes', ['vote_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_votes_vote_id'), table_name='votes')
    op.drop_table('votes')
    op.drop_table('publication_clusters')
    op.drop_table('sdg_predictions')
    op.drop_index(op.f('ix_sdg_label_summaries_sdg_label_summary_id'), table_name='sdg_label_summaries')
    op.drop_table('sdg_label_summaries')
    op.drop_table('sdg_label_decision_user_label')
    op.drop_table('publication_authors')
    op.drop_index(op.f('ix_inventory_achievement_association_id'), table_name='inventory_achievement_association')
    op.drop_table('inventory_achievement_association')
    op.drop_table('dimensionality_reductions')
    op.drop_table('cluster_topics')
    op.drop_index(op.f('ix_annotations_annotation_id'), table_name='annotations')
    op.drop_table('annotations')
    op.drop_table('user_group_association')
    op.drop_index(op.f('ix_sdg_user_labels_label_id'), table_name='sdg_user_labels')
    op.drop_table('sdg_user_labels')
    op.drop_table('sdg_targets')
    op.drop_index(op.f('ix_sdg_label_decisions_decision_id'), table_name='sdg_label_decisions')
    op.drop_table('sdg_label_decisions')
    op.drop_table('publications')
    op.drop_table('labelers')
    op.drop_index(op.f('ix_inventories_inventory_id'), table_name='inventories')
    op.drop_table('inventories')
    op.drop_table('experts')
    op.drop_table('cluster_levels')
    op.drop_table('admins')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_sdg_label_histories_history_id'), table_name='sdg_label_histories')
    op.drop_table('sdg_label_histories')
    op.drop_table('sdg_goals')
    op.drop_table('institutes')
    op.drop_index(op.f('ix_groups_group_id'), table_name='groups')
    op.drop_table('groups')
    op.drop_table('faculties')
    op.drop_table('divisions')
    op.drop_table('cluster_groups')
    op.drop_table('authors')
    op.drop_index(op.f('ix_achievements_achievement_id'), table_name='achievements')
    op.drop_table('achievements')
    # ### end Alembic commands ###
